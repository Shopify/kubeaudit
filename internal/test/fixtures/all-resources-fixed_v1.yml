# This is a test yaml file which includes all supported v1 resources
# as well as an unsupported resource and a custom resource
#
# Supported V1 Resources:
# - Cronjob
# - DaemonSet
# - Deployment
# - PodTemplate
# - ReplicationController
# - StatefulSet
# - Pod
# - Namespace

%YAML   1.1
%TAG    !   !foo
%TAG    !yaml!  tag:yaml.org,2002:

---

apiVersion: apps/v1 # The latest api version for Deployment
# This is a deployment
kind: Deployment
metadata:
  creationTimestamp: null # This is autopopulated
  name: cababilitiesAdded # capabilitiesAdded comment
  namespace: fakeDeploymentSC
spec:
  strategy: {}
  template:
    metadata:
      creationTimestamp: null # This is also autopopulated
      labels:
        apps: fakeSecurityContext
      annotations:
        container.apparmor.security.beta.kubernetes.io/fakeContainerSC1: runtime/default
        container.apparmor.security.beta.kubernetes.io/fakeContainerSC2: runtime/default
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
    spec:
      containers:
      - name: fakeContainerSC1 # map list item comment
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - AUDIT_WRITE # string list item comment
            - CHOWN
            - DAC_OVERRIDE
            - FOWNER
            - FSETID
            - KILL
            - MKNOD
            - NET_BIND_SERVICE
            - NET_RAW
            - SETFCAP
            - SETGID
            - SETPCAP
            - SETUID
            - SYS_CHROOT
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        resources: {}
      - name: fakeContainerSC2
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - AUDIT_WRITE
            - CHOWN
            - DAC_OVERRIDE
            - FOWNER
            - FSETID
            - KILL
            - MKNOD
            - NET_BIND_SERVICE
            - NET_RAW
            - SETFCAP
            - SETGID
            - SETPCAP
            - SETUID
            - SYS_CHROOT
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      automountServiceAccountToken: false
  selector: null

# Post doc comment

---

apiVersion: v1
kind: Namespace
metadata:
  name: default
  creationTimestamp: null
spec: {}
status: {}

---

apiVersion: batch/v1beta1
kind: CronJob
metadata:
  labels:
    app: testapp
    env: production
    name: jobs
  name: testapp
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            app: testapp
            env: production
            name: testapp
          annotations:
            container.apparmor.security.beta.kubernetes.io/jobs: runtime/default
            seccomp.security.alpha.kubernetes.io/pod: runtime/default
        spec:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: role
                    operator: In
                    values:
                    - testapp
          automountServiceAccountToken: false
          containers:
          - env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/run/gcloud/key
            image: gcr.io/docker-image/testapp:<%= current_sha %>
            args: ["gcr.io/docker-images"]
            name: jobs
            resources:
              limits:
                cpu: "1"
                memory: 10Gi
              requests:
                cpu: "1"
                memory: 10Gi
            volumeMounts:
            - name: google-service-account
              mountPath: "/var/run/gcloud"
              readOnly: true
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - AUDIT_WRITE
                - CHOWN
                - DAC_OVERRIDE
                - FOWNER
                - FSETID
                - KILL
                - MKNOD
                - NET_BIND_SERVICE
                - NET_RAW
                - SETFCAP
                - SETGID
                - SETPCAP
                - SETUID
                - SYS_CHROOT
              privileged: false
              readOnlyRootFilesystem: true
              runAsNonRoot: true
          restartPolicy: Never
          tolerations:
          - key: "app"
            operator: "Equal"
            value: "testapp"
            effect: "NoExecute"
          volumes:
          - name: google-service-account
            secret:
              secretName: service-account-key
    metadata:
  schedule: 30 13 * * 1-5

---

apiVersion: v1
kind: PodTemplate
metadata:
  name: pod-template
  labels:
    name: pod-template
    app: foobar
    env: production
template:
  metadata:
    name: pod-template
    labels:
      name: pod-template
      app: foobar
      env: production
    annotations:
      container.apparmor.security.beta.kubernetes.io/pod: runtime/default
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: null
  spec:
    restartPolicy: Never
    containers:
    - name: pod
      image: gcr.io/production/foobar:tag
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - AUDIT_WRITE
          - CHOWN
          - DAC_OVERRIDE
          - FOWNER
          - FSETID
          - KILL
          - MKNOD
          - NET_BIND_SERVICE
          - NET_RAW
          - SETFCAP
          - SETGID
          - SETPCAP
          - SETUID
          - SYS_CHROOT
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
    automountServiceAccountToken: false

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd-elasticsearch
  namespace: kube-system
  labels:
    k8s-app: fluentd-logging
spec:
  selector:
    matchLabels:
      name: fluentd-elasticsearch
  template:
    metadata:
      labels:
        name: fluentd-elasticsearch
      annotations:
        container.apparmor.security.beta.kubernetes.io/fluentd-elasticsearch: runtime/default
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: fluentd-elasticsearch
        image: quay.io/fluentd_elasticsearch/fluentd:v2.5.2
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - AUDIT_WRITE
            - CHOWN
            - DAC_OVERRIDE
            - FOWNER
            - FSETID
            - KILL
            - MKNOD
            - NET_BIND_SERVICE
            - NET_RAW
            - SETFCAP
            - SETGID
            - SETPCAP
            - SETUID
            - SYS_CHROOT
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      automountServiceAccountToken: false
  updateStrategy: {}
status:
  currentNumberScheduled: 0
  desiredNumberScheduled: 0
  numberMisscheduled: 0
  numberReady: 0

---

apiVersion: v1
kind: ReplicationController
metadata:
  name: nginx
spec:
  replicas: 3
  selector:
    app: nginx
  template:
    metadata:
      name: nginx
      labels:
        app: nginx
      annotations:
        container.apparmor.security.beta.kubernetes.io/nginx: runtime/default
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - AUDIT_WRITE
            - CHOWN
            - DAC_OVERRIDE
            - FOWNER
            - FSETID
            - KILL
            - MKNOD
            - NET_BIND_SERVICE
            - NET_RAW
            - SETFCAP
            - SETGID
            - SETPCAP
            - SETUID
            - SYS_CHROOT
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      automountServiceAccountToken: false


---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: nginx # Label selector that determines which Pods belong to the StatefulSet
      # Must match spec: template: metadata: labels
  serviceName: "nginx"
  replicas: 3
  template:
    metadata:
      labels:
        app: nginx # Pod template's label selector
      annotations:
        container.apparmor.security.beta.kubernetes.io/nginx: runtime/default
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: nginx
        image: gcr.io/google_containers/nginx-slim:0.8
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - AUDIT_WRITE
            - CHOWN
            - DAC_OVERRIDE
            - FOWNER
            - FSETID
            - KILL
            - MKNOD
            - NET_BIND_SERVICE
            - NET_RAW
            - SETFCAP
            - SETGID
            - SETPCAP
            - SETUID
            - SYS_CHROOT
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      automountServiceAccountToken: false
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi
  updateStrategy: {}


---

apiVersion: v1
kind: Pod
metadata:
  name: memory-demo
  namespace: mem-example
  annotations:
    container.apparmor.security.beta.kubernetes.io/memory-demo-ctr: runtime/default
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  containers:
  - name: memory-demo-ctr
    image: polinux/stress
    resources:
      limits:
        memory: "200Mi"
      requests:
        memory: "100Mi"
    command: ["stress"]
    args: ["--vm", "1", "--vm-bytes", "150M", "--vm-hang", "1"]
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - AUDIT_WRITE
        - CHOWN
        - DAC_OVERRIDE
        - FOWNER
        - FSETID
        - KILL
        - MKNOD
        - NET_BIND_SERVICE
        - NET_RAW
        - SETFCAP
        - SETGID
        - SETPCAP
        - SETUID
        - SYS_CHROOT
      privileged: false
      readOnlyRootFilesystem: true
      runAsNonRoot: true
  automountServiceAccountToken: false

---

# Unsupported
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: secret-reader
rules:
- apiGroups: [""]
  resources: ["secrets"] # 1
  verbs: ["get", "watch", "list"] # 2

---

# Unsupported
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: pod-reader
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list"]

---

# Custom
apiVersion: v1
kind: Custom
metadata:
  name: unknown_type
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 9870
    protocol: TCP

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny
  namespace: default
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
